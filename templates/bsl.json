{
    "name": "1C:Enterprise BSL",
    "scopeName": "source.bsl",
    "fileTypes": ["bsl", "os"],
    "patterns": [
        { "include": "#comments" },
        { "include": "#regions" },
        { "include": "#directives" },
        { "include": "#annotations" },
        { "include": "#function-definition" },
        { "include": "#keywords" },
        { "include": "#types" },
        { "include": "#numbers" },
        { "include": "#strings" },
        { "include": "#operators" },
        { "include": "#variables" },
        { "include": "#constants" }
    ],
    "repository": {
        "comments": {
            "patterns": [
                { "name": "comment.line.double-slash.bsl", "match": "//.*$" }
            ]
        },
        "regions": {
            "patterns": [
                {
                    "name": "meta.region.bsl",
                    "begin": "#Область\\s+([А-Яа-яA-Za-z_][А-Яа-яA-Za-z0-9_]*)",
                    "end": "#КонецОбласти",
                    "beginCaptures": {
                        "1": { "name": "entity.name.region.bsl" }
                    },
                    "patterns": [
                        { "include": "$self" }
                    ]
                }
            ]
        },
        "directives": {
            "patterns": [
                {
                    "name": "meta.preprocessor.bsl",
                    "match": "#(Если|ИначеЕсли|Иначе|КонецЕсли|Вставка|КонецВставки|Область|КонецОбласти|Использовать|Клиент|Сервер|ВнешнееСоединение|МобильноеПриложениеКлиент|МобильноеПриложениеСервер|ТолстыйКлиентОбычноеПриложение|ТолстыйКлиентУправляемоеПриложение|ТонкийКлиент|ВебКлиент)"
                }
            ]
        },
        "annotations": {
            "patterns": [
                {
                    "name": "meta.annotation.bsl",
                    "match": "&(Перед|После|Вместо|ИзменениеИКонтроль|Before|After|Around|ChangeAndValidate)\\b"
                }
            ]
        },
        "function-definition": {
            "patterns": [
                {
                    "name": "meta.function.bsl",
                    "begin": "\\b(Функция)\\s+([А-Яа-яA-Za-z_][А-Яа-яA-Za-z0-9_]*)\\s*\\(",
                    "end": "\\b(КонецФункции)\\b",
                    "beginCaptures": {
                        "1": { "name": "keyword.control.bsl" },
                        "2": { "name": "entity.name.function.bsl" }
                    },
                    "endCaptures": {
                        "1": { "name": "keyword.control.bsl" }
                    },
                    "patterns": [
                        { "include": "#function-parameters" },
                        { "include": "#function-body" },
                        { "include": "#function-return" }
                    ]
                },
                {
                    "name": "meta.procedure.bsl",
                    "begin": "\\b(Процедура)\\s+([А-Яа-яA-Za-z_][А-Яа-яA-Za-z0-9_]*)\\s*\\(",
                    "end": "\\b(КонецПроцедуры)\\b",
                    "beginCaptures": {
                        "1": { "name": "keyword.control.bsl" },
                        "2": { "name": "entity.name.function.bsl" }
                    },
                    "endCaptures": {
                        "1": { "name": "keyword.control.bsl" }
                    },
                    "patterns": [
                        { "include": "#function-parameters" },
                        { "include": "#function-body" }
                    ]
                }
            ]
        },
        "function-parameters": {
            "patterns": [
                {
                    "name": "meta.function.parameters.bsl",
                    "begin": "\\(",
                    "end": "\\)",
                    "patterns": [
                        {
                            "name": "variable.parameter.bsl",
                            "match": "\\b(Знач\\s+)?([А-Яа-яA-Za-z_][А-Яа-яA-Za-z0-9_]*)\\s*(=\\s*[^,)]+)?",
                            "captures": {
                                "1": { "name": "keyword.control.bsl" },
                                "2": { "name": "variable.parameter.bsl" },
                                "3": { "name": "meta.default-value.bsl" }
                            }
                        },
                        { "include": "#comments" },
                        { "include": "#types" },
                        { "include": "#constants" }
                    ]
                }
            ]
        },
        "function-body": {
            "patterns": [
                {
                    "name": "meta.function.body.bsl",
                    "begin": "\\)",
                    "end": "(?=\\b(КонецФункции|КонецПроцедуры)\\b)",
                    "patterns": [
                        { "include": "#expressions" },
                        { "include": "#keywords" },
                        { "include": "#types" },
                        { "include": "#numbers" },
                        { "include": "#strings" },
                        { "include": "#operators" },
                        { "include": "#variables" },
                        { "include": "#constants" },
                        { "include": "#comments" },
                        { "include": "#regions" },
                        { "include": "#directives" },
                        { "include": "#annotations" }
                    ]
                }
            ]
        },
        "function-return": {
            "patterns": [
                {
                    "name": "keyword.control.return.bsl",
                    "match": "\\bВозврат\\b"
                }
            ]
        },
        "expressions": {
            "patterns": [
                {
                    "name": "meta.expression.assignment.bsl",
                    "match": "([А-Яа-яA-Za-z_][А-Яа-яA-Za-z0-9_]*)\\s*=\\s*([^;]+)",
                    "captures": {
                        "1": { "name": "variable.other.bsl" },
                        "2": { "name": "meta.expression.bsl" }
                    }
                },
                {
                    "name": "meta.expression.ternary.bsl",
                    "begin": "\\?\\(",
                    "end": "\\)",
                    "patterns": [
                        { "include": "#expressions" },
                        { "include": "#keywords" },
                        { "include": "#types" },
                        { "include": "#numbers" },
                        { "include": "#strings" },
                        { "include": "#operators" },
                        { "include": "#variables" },
                        { "include": "#constants" }
                    ]
                },
                {
                    "name": "meta.expression.function-call.bsl",
                    "begin": "\\b([А-Яа-яA-Za-z_][А-Яа-яA-Za-z0-9_]*)\\s*\\(",
                    "end": "\\)",
                    "beginCaptures": {
                        "1": { "name": "entity.name.function.call.bsl" }
                    },
                    "patterns": [
                        { "include": "#function-call-arguments" },
                        { "include": "#expressions" },
                        { "include": "#keywords" },
                        { "include": "#types" },
                        { "include": "#numbers" },
                        { "include": "#strings" },
                        { "include": "#operators" },
                        { "include": "#variables" },
                        { "include": "#constants" }
                    ]
                },
                {
                    "name": "meta.expression.method-call.bsl",
                    "begin": "([А-Яа-яA-Za-z_][А-Яа-яA-Za-z0-9_]*)\\.([А-Яа-яA-Za-z_][А-Яа-яA-Za-z0-9_]*)\\s*\\(",
                    "end": "\\)",
                    "beginCaptures": {
                        "1": { "name": "variable.other.bsl" },
                        "2": { "name": "entity.name.function.call.bsl" }
                    },
                    "patterns": [
                        { "include": "#function-call-arguments" },
                        { "include": "#expressions" },
                        { "include": "#keywords" },
                        { "include": "#types" },
                        { "include": "#numbers" },
                        { "include": "#strings" },
                        { "include": "#operators" },
                        { "include": "#variables" },
                        { "include": "#constants" }
                    ]
                },
                {
                    "name": "meta.expression.object-creation.bsl",
                    "match": "Новый\\s+([А-Яа-яA-Za-z_][А-Яа-яA-Za-z0-9_]*)",
                    "captures": {
                        "1": { "name": "storage.type.bsl" }
                    }
                },
                {
                    "name": "meta.expression.property-access.bsl",
                    "match": "([А-Яа-яA-Za-z_][А-Яа-яA-Za-z0-9_]*)\\.([А-Яа-яA-Za-z_][А-Яа-яA-Za-z0-9_]*)(?!\\s*\\()",
                    "captures": {
                        "1": { "name": "variable.other.bsl" },
                        "2": { "name": "variable.other.bsl" }
                    }
                }
            ]
        },
        "function-call-arguments": {
            "patterns": [
                {
                    "name": "meta.function-call.arguments.bsl",
                    "begin": "\\(",
                    "end": "\\)",
                    "patterns": [
                        {
                            "name": "variable.parameter.bsl",
                            "match": "\\b([А-Яа-яA-Za-z_][А-Яа-яA-Za-z0-9_]*)\\b",
                            "captures": {
                                "1": { "name": "variable.parameter.bsl" }
                            }
                        },
                        { "include": "#expressions" },
                        { "include": "#keywords" },
                        { "include": "#types" },
                        { "include": "#numbers" },
                        { "include": "#strings" },
                        { "include": "#operators" },
                        { "include": "#variables" },
                        { "include": "#constants" }
                    ]
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.bsl",
                    "match": "\\b(Если|ИначеЕсли|Иначе|КонецЕсли|Для|Каждого|Из|По|Пока|Цикл|КонецЦикла|Перем|Перейти|Продолжить|Прервать|И|Или|Не|Попытка|Исключение|ВызватьИсключение|КонецПопытки|Новый|Выполнить|Экспорт|Знач|Тип|ТипЗнч|ЗначениеЗаполнено|ПустаяСтрока|СокрЛП|СтрДлина|СтрЗаменить|СтрШаблон|ТекущаяДата|ДобавитьМесяц|ДобавитьДень|Мин|Макс|Окр)\\b"
                }
            ]
        },
        "types": {
            "patterns": [
                {
                    "name": "storage.type.bsl",
                    "match": "\\b(Число|Строка|Дата|Булево|Неопределено|NULL|Массив|Структура|Соответствие|СписокЗначений|ТаблицаЗначений|ДеревоЗначений|Тип|ОписаниеТипов|СправочникСсылка|ДокументСсылка|ПеречислениеСсылка|Запрос|РезультатЗапроса|ПакетЗапросов|РезультатПакетаЗапросов|Граница|ВидГраницы|Истина|Ложь)\\b"
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "name": "constant.numeric.bsl",
                    "match": "\\b\\d+(\\.\\d+)?\\b"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "name": "string.quoted.double.bsl",
                    "begin": "\"",
                    "end": "\"",
                    "patterns": [
                        {
                            "name": "constant.character.escape.bsl",
                            "match": "\"\""
                        }
                    ]
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.bsl",
                    "match": "(\\+|\\-|\\*|\\/|%|=|<>|<=|>=|<|>|\\.|\\[|\\]|\\(|\\)|:|;|,|\\?|\\()"
                }
            ]
        },
        "variables": {
            "patterns": [
                {
                    "name": "variable.other.bsl",
                    "match": "\\b([А-Яа-яA-Za-z_][А-Яа-яA-Za-z0-9_]*)\\b"
                }
            ]
        },
        "constants": {
            "patterns": [
                {
                    "name": "constant.language.bsl",
                    "match": "\\b(Истина|Ложь|Неопределено|NULL)\\b"
                }
            ]
        }
    }
}
