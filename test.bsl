// Тестовый файл для проверки грамматики BSL

#Область ОписаниеПеременных

Перем ИмяПеременной Экспорт;
Перем ЧислоПеременной Экспорт;

#КонецОбласти

#Область ПроцедурыИФункции

// Параметры:
//	ИмяПараметра - Строка - имя параметра
// Возвращаемое значение:
//  - Строка - результат обработки
Функция ОбработатьСтроку(ИмяПараметра) Экспорт
	Результат = "";
	
	Если Не ПустаяСтрока(ИмяПараметра) Тогда
		Результат = ВРег(ИмяПараметра);
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

Процедура ТестоваяПроцедура() Экспорт
	// +++ Добавлено новое поведение
	Сообщить("Тестовая процедура выполнена");
	
	// Создание объектов
	НовыйСтруктура = Новый Структура;
	НовыйМассив = Новый Массив;
	НовыйСоответствие = Новый Соответствие;
	
	// Работа с датами
	ТекущаяДата = ТекущаяДата();
	ГодДаты = Год(ТекущаяДата);
	
	// Математические операции
	Результат = 10 + 5 * 2;
	Остаток = Результат % 3;
	
	// Строковые операции
	ДлинаСтроки = СтрДлина("Тестовая строка");
	ВерхнийРегистр = ВРег("нижний регистр");
	
	// Условные конструкции
	Если Результат > 10 Тогда
		Сообщить("Результат больше 10");
	ИначеЕсли Результат = 10 Тогда
		Сообщить("Результат равен 10");
	Иначе
		Сообщить("Результат меньше 10");
	КонецЕсли;
	
	// Циклы
	Для Счетчик = 1 По 5 Цикл
		Сообщить("Итерация: " + Счетчик);
	КонецЦикла;
	
	Пока Счетчик > 0 Цикл
		Счетчик = Счетчик - 1;
	КонецЦикла;
	
	// Обработка исключений
	Попытка
		Результат = 1 / 0;
	Исключение
		Сообщить("Ошибка: " + ОписаниеОшибки());
	КонецПопытки;
	
	// Работа с файлами
	ИмяФайла = ПолучитьИмяВременногоФайла();
	
	// Работа с ИБ
	НачатьТранзакцию();
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

#КонецОбласти

// Аннотации
&НаКлиенте
&НаСервере
&НаКлиентеНаСервере

// Строковые литералы с поддержкой
Тип("Документ.Справочник");
ПредопределенноеЗначение("Документ.Справочник.Объект");

// Комментарии разработчика
// --- Удалено старое поведение
// +++ Добавлено новое поведение
// >>> Изменено поведение
// <<< Откачено изменение 