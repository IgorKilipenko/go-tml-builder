{
  "scopeName": "source.bsl",
  "name": "1C:Community (BSL)",
  "patterns": [
    {
      "name": "keyword.control.bsl",
      "match": "\\b(Если|Тогда|ИначеЕсли|Иначе|КонецЕсли|Для|Каждого|Из|Цикл|КонецЦикла|Пока|Продолжить|Прервать|Возврат|Попытка|Исключение|КонецПопытки|ВызватьИсключение)\\b"
    },
    {
      "name": "storage.type.bsl",
      "match": "\\b(Перем|Var|Знач|Val|Экспорт|Export)\\b"
    },
    {
      "name": "comment.line.double-slash.bsl",
      "match": "//.*"
    },
    {
      "name": "comment.block.documentation.bsl",
      "begin": "/\\*",
      "end": "\\*/",
      "captures": {
        "0": {
          "name": "punctuation.definition.comment.bsl"
        }
      }
    },
    {
      "name": "meta.function.bsl",
      "begin": "\\b(Процедура|Функция)\\s+([а-яА-ЯёЁ\\w]+)\\b",
      "end": "\\b(КонецПроцедуры|КонецФункции)\\b",
      "patterns": [
        {
          "include": "$self"
        }
      ],
      "captures": {
        "1": {
          "name": "keyword.declaration.bsl"
        },
        "2": {
          "name": "entity.name.function.bsl"
        }
      }
    }
  ],
  "repository": {
    "builtin_functions": {
      "name": "support.function.builtin.bsl",
      "match": "\\b(Строка|Формат|Лев|Прав|Сред|Найти|ВРег|НРег|ТРег|СокрЛ|СокрП|СокрЛП|Символ|КодСимвола|ПустаяСтрока|ЗаполнитьПравее|ЗаполнитьЛевее)\\b"
    },
    "function_params": {
      "name": "meta.function.parameters.bsl",
      "begin": "\\b(Знач|Val)\\s*\\(",
      "end": "\\)",
      "patterns": [
        {
          "include": "#numbers"
        },
        {
          "include": "#strings"
        }
      ],
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.parameters.begin.bsl"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.parameters.end.bsl"
        }
      }
    },
    "numbers": {
      "name": "constant.numeric.bsl",
      "match": "\\b\\d+(\\.\\d+)?\\b"
    },
    "preprocessor": {
      "name": "meta.preprocessor.bsl",
      "begin": "^#(Если|КонецЕсли|Иначе|ИначеЕсли)",
      "end": "$",
      "captures": {
        "1": {
          "name": "keyword.control.preprocessor.bsl"
        }
      }
    },
    "strings": {
      "name": "string.quoted.double.bsl",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.bsl",
          "match": "\\\\(\"|n|r|t)"
        }
      ]
    }
  }
}
